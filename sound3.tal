( hello-sound.tal )

%+  { ADD }  %-  { SUB }  %*  { MUL }  %/  { DIV }
%<  { LTH }  %>  { GTH }  %=  { EQU }  %!  { NEQ }
%++ { ADD2 } %-- { SUB2 } %** { MUL2 } %// { DIV2 }
%<< { LTH2 } %>> { GTH2 } %== { EQU2 } %!! { NEQ2 }

%2*  { #10 SFT } %2/  { #01 SFT } %2**  { #10 SFT2 } %2//  { #01 SFT2 }
%4*  { #20 SFT } %4/  { #02 SFT } %4**  { #20 SFT2 } %4//  { #02 SFT2 }
%8*  { #30 SFT } %8/  { #03 SFT } %8**  { #30 SFT2 } %8//  { #03 SFT2 }
%10* { #40 SFT } %10/ { #04 SFT } %10** { #40 SFT2 } %10// { #04 SFT2 }
%20* { #50 SFT } %20/ { #05 SFT } %20** { #50 SFT2 } %20// { #05 SFT2 }

%2MOD  { #01 AND } %2MOD2  { #0001 AND2 }
%4MOD  { #03 AND } %4MOD2  { #0003 AND2 }
%8MOD  { #07 AND } %8MOD2  { #0007 AND2 }
%10MOD { #0f AND } %10MOD2 { #000f AND2 }
%DEBUG      { ;print-hex/byte JSR2 #0a18 DEO }
%DEBUG2     { ;print-hex JSR2 #0a18 DEO }
%RTN        { JMP2r } 
%MOD { DIVk MUL SUB }
%MOD2 { DIV2k MUL2 SUB2 }
( play note and increment through the notes array )
%PLAY-NOTE { ;pitches #00 ;count/n LDA ADD2 LDA .Audio0/pitch DEO ;count/n LDA INC ;pitch-length LDA MOD ;count/n STA }

%IS-UC { DUP #40 > SWP #5b < AND }
%IS-LC { DUP #60 > SWP #7b < AND }
%IS-NUM { DUP #2f > SWP #3a < AND }
%16STEP { ;count/c LDA2 ;tempo LDA2 #0020 DIV2 DIV2 #0010 MOD2 NIP }
%32STEP { ;count/c LDA2 ;tempo LDA2 #0020 DIV2 DIV2 NIP }
%PRINT-RHYTHM { ;rhythms LDA2 DEBUG2 ;rhythms #0002 ADD2 LDA2 DEBUG2 }
	
	( devices )
	|00 @System     [ &vector $2 &wst      $1 &rst    $1 &pad   $4 &r      $2 &g      $2 &b    $2 &debug  $1 &halt $1 ]
	|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write $1 &error  $1 ]
	|20 @Screen     [ &vector $2 &width    $2 &height $2 &pad   $2 &x      $2 &y      $2 &addr $2 &pixel  $1 &sprite $1 ]
	|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
	|40 @Audio1     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
	|50 @Audio2     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
	|60 @Audio3     [ &vector $2 &position $2 &output $1 &pad   $3 &adsr   $2 &length $2 &addr $2 &volume $1 &pitch $1 ]
	|80 @Controller [ &vector $2 &button   $1 &key    $1 ]
	|90 @Mouse      [ &vector $2 &x        $2 &y      $2 &state $1 &wheel  $1 ]
	|a0 @File       [ &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name  $2 &length $2 &read $2 &write $2 ]
	|b0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour  $1 &minute $1 &second $1 &dotw $1 &doty   $2 &isdst $1 ]

	
	( main program )
	|0100
	

	( ;my-string ;print-str JSR2 )
		#0f0f .System/r DEO2 
		#0ff0 .System/g DEO2 
		#00ff .System/b DEO2
		( seed prng (must be nonzero) )
		#00 .DateTime/second DEI
		#00 .DateTime/minute DEI #60 SFT2 EOR2
		#00 .DateTime/hour   DEI #c0 SFT2 EOR2 ;prng2/x STA2
		#00 .DateTime/hour   DEI #04 SFT2
		#00 .DateTime/day    DEI #10 SFT2 EOR2
		#00 .DateTime/month  DEI #60 SFT2 EOR2
				.DateTime/year  DEI2 #a0 SFT2 EOR2 ;prng2/y STA2
		;prng2/x LDA2 ;prng2/y LDA2 EOR2
		ORAk ,&non-zero JCN INC2 &non-zero
		;prng/seed STA2
	
		;loop .Screen/vector DEO2
		;on-stdin .Console/vector DEO2
		;violin-pcm .Audio0/addr DEO2 ( set sample address )
		#0080 .Audio0/length DEO2 ( set sample length )
		#0042 .Audio0/adsr DEO2 ( set envelope )
		#ff .Audio0/volume DEO ( set maximum volume )
		;random-wave-table JSR2
		;load-theme JSR2

	BRK

@load-theme ( -- )
	    ;theme/name .File/name DEO2 ( set address of file path )
	    #0006 .File/length DEO2 ( will attempt to read 6 bytes )
	
	    ( set address for the data to read, and do read )
	    ;theme/data .File/read DEO2 
	
	    ( check the success byte and jump accordingly )
	    .File/success DEI2 #0006 NEQ2 ,&failed JCN 
	
	    &success
	        ( set the system colors from the read data )
	        ;theme/r LDA2 .System/r DEO2
	        ;theme/g LDA2 .System/g DEO2
	        ;theme/b LDA2 .System/b DEO2
	    RTN
	
	    &failed
	RTN
	
	@theme 
	    &name ".theme 00
	    &data ( reserving 6 bytes for the data: )
	    &r $2 &g $2 &b $2


@random-wave-table
	#80 #00
@loop-noise
	DUP ;noise ROT #00 SWP ADD2 ;prng JSR2 
	( DUP2 DEBUG2  )
	SWP2 STA2
	INC GTHk ,loop-noise JCN
POP2

@on-note-end
	#3c .Audio0/pitch DEO
RTN

@my-string "Hello 20 "World! 0a00

@on-stdin ( -> )
	.Console/read DEI DUP #0a EQU ,&end JCN
  ;text-input ;count/i LDA2 ADD2 STA 
  ;count/i LDA2 INC2 ;count/i STA2
	BRK
	&end 
  ;text-input ;count/i LDA2 ADD2 STA 
  #0000 ;count/i STA2
  ;text-input ;print-str JSR2
  ;language JMP2
BRK



@language ( -> )
  ;text-input LDA
	DUP LIT "n EQU ;pitch JCN2
  DUP LIT "r EQU ;rhythm JCN2
  DUP LIT "f EQU ;shiftadd JCN2
  DUP LIT "i EQU ;set-instrument JCN2
  DUP LIT "t EQU ;set-tempo JCN2
  DUP LIT "s EQU ;toggle-vis JCN2
  BRK

@toggle-vis
	POP ;console-vis LDA ,&toggle JCN
		#01 ;console-vis STA 
		BRK
	&toggle
	#00 ;console-vis STA
BRK

@set-tempo
	POP ;text-input #0002 ADD2 LDA2 SWP ;check-ascii-range JSR2 #10 MUL SWP ;check-ascii-range JSR2 ADD ;tempo #0001 ADD2 STA
	
BRK
@shiftadd
	POP ;rhythms LDA2 DUP2 #01 SFT2 ADD2 ;rhythms STA2
	;rhythms #0002 ADD2 LDA2 DUP2 #01 SFT2 ADD2 ;rhythms #0002 ADD2 STA2
BRK
@pitch
( n 60 40 32 34: )
	#00 ;pitch-length STA
	POP ;text-input #0002 ADD2 
	( DUP2 DEBUG2 )
	@more-pitches 
	DUP2 LDA2
	SWP #30 SUB #0a MUL SWP #30 SUB ADD
	;pitches #00 ;pitch-length LDA ADD2 STA
	;pitch-length LDA INC ;pitch-length STA 
	#0003 ADD2 DUP2 #0001 SUB2 LDA 
	LIT "] NEQ ,more-pitches JCN
	PRINT-RHYTHM
	POP2
	;pitch-length LDA #00
	( @print-notes
		DUP #00 SWP ;pitches ADD2 LDA DEBUG
		INC GTHk ,print-notes JCN
	POP2	 )
BRK
@rhythm
	POP #0008 #0000 
	@loop-rhythm-ascii
	DUP2
	( c i 30 )
	;text-input SWP2 #0002 ADD2 ADD2 LDA 
		;check-ascii-range JSR2
		( #0008 #Iter 00#Val #Iter #Iter #0002 MOD2 #0000 EQU2 )
			#00 SWP OVR2 DUP2 #0002 MOD2 #0001 EQU2 ,&snib JCN
				#0002 DIV2 ;rhythms ADD2 SWP2 #0010 MUL2 SWP2 STA POP ,&end JMP
			&snib
				#0002 DIV2 ;rhythms ADD2 STH2k LDA ADD STH2r STA POP ,&end JMP
			&end
			INC2 GTH2k ;loop-rhythm-ascii JCN2
			( remove interator & count )
			POP2 POP2

BRK

@set-instrument
	POP ;text-input #02 ADD LDA #30 SUB 
	DUP #01 EQU ,&sin JCN
	DUP #02 EQU ,&tri JCN
	DUP #03 EQU ,&saw JCN
	DUP #04 EQU ,&violin JCN
	DUP #05 EQU ,&piano JCN
	DUP #06 EQU ,&noise JCN
	DUP #07 EQU ,&noise-rand JCN
	BRK
	&sin ;sin-pcm .Audio0/addr DEO2 POP BRK
	&tri ;tri-pcm .Audio0/addr DEO2 POP BRK
	&saw ;saw-pcm .Audio0/addr DEO2 POP BRK
	&violin ;violin-pcm .Audio0/addr DEO2 POP BRK
	&piano ;piano-pcm .Audio0/addr DEO2 POP BRK
	&noise ;noise .Audio0/addr DEO2 POP BRK
	&noise-rand ;prng JSR2 ;end-memory MOD2 .Audio0/addr DEO2 POP BRK


@loop ( -> )
	( ;prng JSR2 ;end-memory MOD2 .Audio0/addr DEO2 )
  ;count/c LDA2 INC2 ;count/c STA2

  ( check for step )
  ( 32STEP DEBUG )
	( i t / #0020 )
  ;count/c LDA2 ;tempo LDA2 #0020 DIV2 MOD2 #0000 NEQ2 ,&no-beat JCN
	
  ( check for first 16 )
	
  ;count/c LDA2 ;tempo LDA2 MOD2 ;tempo LDA2 #0002 DIV2 LTH2 ,&f16 JCN
  ( check for second 16 )
  ;count/c LDA2 ;tempo LDA2 MOD2 ;tempo LDA2 LTH2 ,&s16 JCN
  &no-beat
	;console-vis LDA ,&no-vis1 JCN 
	LIT ". #18 DEO
	&no-vis1
  BRK
  &s16

  ;rhythms #0002 ADD2 LDA2 ;bit-check LDA2 16STEP SFT2 AND2 #0000 NEQ2 ,&play-note JCN
	;console-vis LDA ,&no-vis2 JCN 
	LIT "! #18 DEO
	&no-vis2
  BRK
  &f16
	
  ;rhythms LDA2 ;bit-check LDA2 16STEP SFT2 AND2 #0000 NEQ2 ,&play-note JCN
	;console-vis LDA ,&no-vis3 JCN 
	LIT "! #18 DEO
	&no-vis3
  BRK
	
  &beat-to-check
    #35 #18 DEO
    ( ;rhythms LDA2 ;bit-check LDA2 AND2 #0000 NEQ2 
    ;inc-bit-check JSR2
    ,&play-note JCN )
  BRK
  &play-note 
		;console-vis LDA ,&no-vis4 JCN 
		LIT "[ LIT "X #18 DEO2 LIT "] #0a #18 DEO2
		&no-vis4
    PLAY-NOTE
BRK

@inc-bit-check
  ;bit-check LDA2 #01 SFT2 DUP2 #0000 EQU2 ,&reset-bit-check JCN 
  ;bit-check STA2
  RTN
  &reset-bit-check
    #8000 ;bit-check STA2
RTN



BRK

 @print-hex ( value* -- )
	
	SWP ,&byte JSR 
	&byte ( byte -- )
		STHk #04 SFT ,&parse JSR #18 DEO
		STHr #0f AND ,&parse JSR #18 DEO
	RTN
	&parse ( byte -- char ) DUP #09 GTH ,&above JCN #30 + RTN 
	&above #57 + RTN

RTN

@print-dec ( value* -- )

	#2710 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#03e8 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#0064 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#000a DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#30 ADD #18 DEO POP

RTN

@print-str ( string* -- )

  
	#0001 SUB2 
	&while
		INC2 LDAk DUP #18 DEO #0a NEQ ,&while JCN 
	POP2
  
RTN

@prng ( -- number* )
	( returns the next number in a 65,535-long sequence,
	  which is never zero but every other 16-bit number
	  appears once before the sequence repeats )
	( http://www.retroprogramming.com/2017/07/xorshift-pseudorandom-numbers-in-z80.html )
	,&seed LDR2
	DUP2 #70 SFT2 EOR2
	DUP2 #09 SFT2 EOR2
	DUP2 #80 SFT2 EOR2	
	,&seed STR2k POP
	JMP2r

	&seed $2

@prng2 ( -- number* )
	( returns the next number in a (2^32-1)-long sequence )
	( http://b2d-f9r.blogspot.com/2010/08/16-bit-xorshift-rng-now-with-more.html )
	,&x LDR2
	DUP2 #50 SFT2 EOR2
	DUP2 #03 SFT2 EOR2
	,&y LDR2 DUP2 ,&x STR2
	DUP2 #01 SFT2 EOR2 EOR2
	,&y STR2k POP
	JMP2r

	&x $2
	&y $2

@check-ascii-range
	DUP IS-NUM ,&num JCN 
	DUP IS-LC ,&lc JCN
	DUP IS-UC ,&uc JCN
	&num
		#30 SUB
	,&continue JMP
	&lc
		#57 SUB
	,&continue JMP
	&uc
		#37 SUB
	&continue
	RTN


@draw-str ( str* color -- )

	STH
	&while
		LDAk STHkr ,draw-char JSR
		INC2 LDAk ,&while JCN
	POP2
	POPr

JMP2r

@draw-char ( char color -- )

	SWP
	[ #20 - #00 SWP #40 SFT2 ;font ++ ] .Screen/addr DEO2
	.Screen/sprite DEOk DEO
	.Screen/y DEI2 #0010 -- .Screen/y DEO2
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2

JMP2r

@noise $100

@piano-pcm
	8182 8588 8d91 959b a1a6 aaad b2b5 b8bd
	c1c7 cbd0 d5d9 dde1 e5e5 e4e4 e1dc d7d1
	cbc5 bfb8 b2ac a6a2 9c97 928d 8884 807c
	7977 7574 7372 7272 7273 7372 706d 6964
	605b 5650 4d49 4643 4342 4244 4548 4a4d
	5052 5556 5758 5554 5150 4c4a 4744 423f
	3d3c 3a38 3835 3431 3030 2f31 3336 393e
	4449 4e54 5a60 666b 7175 7b82 8990 989e
	a6ab b1b6 babd bebf bfbe bbb9 b6b3 b0ae
	aaa8 a6a3 a19e 9c9a 9997 9696 9798 9b9e
	a1a4 a6a9 a9ac adad adae aeaf b0b0 b1b1
	b3b3 b4b4 b4b3 b3b1 b0ad abab a9a9 a8a8
	a7a5 a19d 9891 8b84 7e77 726e 6b6b 6b6c
	6f71 7477 7776 7370 6c65 5e56 4e48 423f
	3d3c 3b3a 3a39 3838 3839 393a 3c3e 4146
	4a50 575b 6064 686a 6e70 7274 7677 7a7d

@violin-pcm
	8681 8d94 9ba0 a3a7 acb1 b5bc c2c7 cacc
	cecf d0d1 d3d5 d8db dee1 e3e5 e6e5 e5e3
	dfdc d7d0 c8c2 bbb2 a99f 968c 847c 746e
	675f 5851 4b43 3e3a 3533 312e 2c2b 2826
	2422 2122 2327 2d34 3c44 4c57 5f68 7075
	7b80 8487 8789 8a8c 8d90 9397 999c 9ea0
	a2a2 a2a0 9c97 9491 8f8e 908f 918f 8e88
	827a 726a 6058 5047 423f 3f40 4245 4748
	4949 4746 4545 4a4f 5863 717f 8b9a a6b1
	b8be c1c1 bfbd bab5 b1af acac aeb1 b7bc
	c2c9 cfd3 d5d4 d3d3 d1ce cbc6 c0ba b3ab
	a39a 8f85 7b72 6c67 6462 605f 5e5d 5b58
	5550 4d49 4848 4949 4a4d 5052 5558 5b5e
	6164 686c 7074 7677 7979 7a7b 7b7a 7977
	7473 6f6e 6b69 696b 6f72 7576 7574 716b
	655d 554e 4742 3f3f 4045 4b52 5a62 6b74

@sin-pcm
	8083 8689 8c8f 9295 989b 9ea1 a4a7 aaad
	b0b3 b6b9 bbbe c1c3 c6c9 cbce d0d2 d5d7
	d9db dee0 e2e4 e6e7 e9eb ecee f0f1 f2f4
	f5f6 f7f8 f9fa fbfb fcfd fdfe fefe fefe
	fffe fefe fefe fdfd fcfb fbfa f9f8 f7f6
	f5f4 f2f1 f0ee eceb e9e7 e6e4 e2e0 dedb
	d9d7 d5d2 d0ce cbc9 c6c3 c1be bbb9 b6b3
	b0ad aaa7 a4a1 9e9b 9895 928f 8c89 8683
	807d 7a77 7471 6e6b 6865 625f 5c59 5653
	504d 4a47 4542 3f3d 3a37 3532 302e 2b29
	2725 2220 1e1c 1a19 1715 1412 100f 0e0c
	0b0a 0908 0706 0505 0403 0302 0202 0202
	0102 0202 0202 0303 0405 0506 0708 090a
	0b0c 0e0f 1012 1415 1719 1a1c 1e20 2225
	2729 2b2e 3032 3537 3a3d 3f42 4547 4a4d
	5053 5659 5c5f 6265 686b 6e71 7477 7a7d

@tri-pcm
	8082 8486 888a 8c8e 9092 9496 989a 9c9e
	a0a2 a4a6 a8aa acae b0b2 b4b6 b8ba bcbe
	c0c2 c4c6 c8ca ccce d0d2 d4d6 d8da dcde
	e0e2 e4e6 e8ea ecee f0f2 f4f6 f8fa fcfe
	fffd fbf9 f7f5 f3f1 efed ebe9 e7e5 e3e1
	dfdd dbd9 d7d5 d3d1 cfcd cbc9 c7c5 c3c1
	bfbd bbb9 b7b5 b3b1 afad aba9 a7a5 a3a1
	9f9d 9b99 9795 9391 8f8d 8b89 8785 8381
	7f7d 7b79 7775 7371 6f6d 6b69 6765 6361
	5f5d 5b59 5755 5351 4f4d 4b49 4745 4341
	3f3d 3b39 3735 3331 2f2d 2b29 2725 2321
	1f1d 1b19 1715 1311 0f0d 0b09 0705 0301
	0103 0507 090b 0d0f 1113 1517 191b 1d1f
	2123 2527 292b 2d2f 3133 3537 393b 3d3f
	4143 4547 494b 4d4f 5153 5557 595b 5d5f
	6163 6567 696b 6d6f 7173 7577 797b 7d7f

@saw-pcm
	8282 8183 8384 8685 8888 8889 8a8b 8c8c
	8e8e 8f90 9092 9193 9494 9596 9699 9899
	9b9a 9c9c 9c9d 9ea0 a1a0 a2a2 a3a5 a4a6
	a7a7 a9a8 a9aa aaac adad aeae b0b0 b1b3
	b2b4 b5b5 b6b7 b9b8 b9bb babc bdbc bdbe
	bfc1 bfc1 c3c1 c4c5 c5c6 c6c7 c9c7 cbca
	cbcc cdcd cfcf d2d0 d2d2 d2d5 d4d5 d6d7
	d8d8 d9dc d9df dadf dce1 dde5 dce6 dceb
	cb1f 1b1e 1c21 1c21 1f23 2025 2127 2329
	2529 2829 2a2b 2b2e 2d2f 302f 3231 3234
	3334 3536 3836 3939 3a3b 3b3d 3e3d 3f40
	4042 4242 4444 4646 4748 474a 4a4b 4d4c
	4e4e 4f50 5052 5252 5554 5557 5759 5959
	5b5b 5c5d 5d5f 5e60 6160 6264 6365 6566
	6867 6969 6a6c 6c6d 6d6e 706f 7071 7174
	7475 7576 7777 797a 7a7c 7b7c 7e7d 7f7f

@console-vis 01
@count [ &i 0000 &c 0000 &r 0000 &n 0000 ] 
@note [ &val 3c30 3235 ]
@tempo 00c0
@bit-check 8000
@beat-check 00

@pitch-length 01
@pitches 0000 0000 0000 0000 0000 0000 0000 0000
@rhythms 8000 0000 0000 0000 0000 0000 0000 0000

@font ( terminus01x02 )
	0000 0000 0000 0000 0000 0000 0000 0000
	0000 183c 3c3c 1818 1800 1818 0000 0000
	0066 6666 2400 0000 0000 0000 0000 0000
	0000 006c 6cfe 6c6c 6cfe 6c6c 0000 0000
	1818 7cc6 c2c0 7c06 0686 c67c 1818 0000
	0000 0000 c2c6 0c18 3060 c686 0000 0000
	0000 386c 6c38 76dc cccc cc76 0000 0000
	0030 3030 6000 0000 0000 0000 0000 0000
	0000 0c18 3030 3030 3030 180c 0000 0000
	0000 3018 0c0c 0c0c 0c0c 1830 0000 0000
	0000 0000 0066 3cff 3c66 0000 0000 0000
	0000 0000 0018 187e 1818 0000 0000 0000
	0000 0000 0000 0000 0018 1818 3000 0000
	0000 0000 0000 00fe 0000 0000 0000 0000
	0000 0000 0000 0000 0000 1818 0000 0000
	0000 0000 0206 0c18 3060 c080 0000 0000
	0000 386c c6c6 d6d6 c6c6 6c38 0000 0000
	0000 1838 7818 1818 1818 187e 0000 0000
	0000 7cc6 060c 1830 60c0 c6fe 0000 0000
	0000 7cc6 0606 3c06 0606 c67c 0000 0000
	0000 0c1c 3c6c ccfe 0c0c 0c1e 0000 0000
	0000 fec0 c0c0 fc06 0606 c67c 0000 0000
	0000 3860 c0c0 fcc6 c6c6 c67c 0000 0000
	0000 fec6 0606 0c18 3030 3030 0000 0000
	0000 7cc6 c6c6 7cc6 c6c6 c67c 0000 0000
	0000 7cc6 c6c6 7e06 0606 0c78 0000 0000
	0000 0000 1818 0000 0018 1800 0000 0000
	0000 0000 1818 0000 0018 1830 0000 0000
	0000 0006 0c18 3060 3018 0c06 0000 0000
	0000 0000 007e 0000 7e00 0000 0000 0000
	0000 0060 3018 0c06 0c18 3060 0000 0000
	0000 7cc6 c60c 1818 1800 1818 0000 0000
	0000 007c c6c6 dede dedc c07c 0000 0000
	0000 1038 6cc6 c6fe c6c6 c6c6 0000 0000
	0000 fc66 6666 7c66 6666 66fc 0000 0000
	0000 3c66 c2c0 c0c0 c0c2 663c 0000 0000
	0000 f86c 6666 6666 6666 6cf8 0000 0000
	0000 fe66 6268 7868 6062 66fe 0000 0000
	0000 fe66 6268 7868 6060 60f0 0000 0000
	0000 3c66 c2c0 c0de c6c6 663a 0000 0000
	0000 c6c6 c6c6 fec6 c6c6 c6c6 0000 0000
	0000 3c18 1818 1818 1818 183c 0000 0000
	0000 1e0c 0c0c 0c0c cccc cc78 0000 0000
	0000 e666 666c 7878 6c66 66e6 0000 0000
	0000 f060 6060 6060 6062 66fe 0000 0000
	0000 c6ee fefe d6c6 c6c6 c6c6 0000 0000
	0000 c6e6 f6fe dece c6c6 c6c6 0000 0000
	0000 7cc6 c6c6 c6c6 c6c6 c67c 0000 0000
	0000 fc66 6666 7c60 6060 60f0 0000 0000
	0000 7cc6 c6c6 c6c6 c6d6 de7c 0c0e 0000
	0000 fc66 6666 7c6c 6666 66e6 0000 0000
	0000 7cc6 c660 380c 06c6 c67c 0000 0000
	0000 7e7e 5a18 1818 1818 183c 0000 0000
	0000 c6c6 c6c6 c6c6 c6c6 c67c 0000 0000
	0000 c6c6 c6c6 c6c6 c66c 3810 0000 0000
	0000 c6c6 c6c6 d6d6 d6fe ee6c 0000 0000
	0000 c6c6 6c7c 3838 7c6c c6c6 0000 0000
	0000 6666 6666 3c18 1818 183c 0000 0000
	0000 fec6 860c 1830 60c2 c6fe 0000 0000
	0000 3c30 3030 3030 3030 303c 0000 0000
	0000 0080 c0e0 7038 1c0e 0602 0000 0000
	0000 3c0c 0c0c 0c0c 0c0c 0c3c 0000 0000
	1038 6cc6 0000 0000 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 00ff 0000
	3030 1800 0000 0000 0000 0000 0000 0000
	0000 0000 0078 0c7c cccc cc76 0000 0000
	0000 e060 6078 6c66 6666 667c 0000 0000
	0000 0000 007c c6c0 c0c0 c67c 0000 0000
	0000 1c0c 0c3c 6ccc cccc cc76 0000 0000
	0000 0000 007c c6fe c0c0 c67c 0000 0000
	0000 386c 6460 f060 6060 60f0 0000 0000
	0000 0000 0076 cccc cccc cc7c 0ccc 7800
	0000 e060 606c 7666 6666 66e6 0000 0000
	0000 1818 0038 1818 1818 183c 0000 0000
	0000 0606 000e 0606 0606 0606 6666 3c00
	0000 e060 6066 6c78 786c 66e6 0000 0000
	0000 3818 1818 1818 1818 183c 0000 0000
	0000 0000 00ec fed6 d6d6 d6c6 0000 0000
	0000 0000 00dc 6666 6666 6666 0000 0000
	0000 0000 007c c6c6 c6c6 c67c 0000 0000
	0000 0000 00dc 6666 6666 667c 6060 f000
	0000 0000 0076 cccc cccc cc7c 0c0c 1e00
	0000 0000 00dc 7666 6060 60f0 0000 0000
	0000 0000 007c c660 380c c67c 0000 0000
	0000 1030 30fc 3030 3030 361c 0000 0000
	0000 0000 00cc cccc cccc cc76 0000 0000
	0000 0000 0066 6666 6666 3c18 0000 0000
	0000 0000 00c6 c6d6 d6d6 fe6c 0000 0000
	0000 0000 00c6 6c38 3838 6cc6 0000 0000
	0000 0000 00c6 c6c6 c6c6 c67e 060c f800
	0000 0000 00fe cc18 3060 c6fe 0000 0000
	0000 0e18 1818 7018 1818 180e 0000 0000
	0000 1818 1818 0018 1818 1818 0000 0000
	0000 7018 1818 0e18 1818 1870 0000 0000

@end-memory

@text-input 
